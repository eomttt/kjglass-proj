{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Head, Main, NextScript, Html } from 'next/document';\nimport PropTypes from 'prop-types';\nimport { ServerStyleSheet, createGlobalStyle } from 'styled-components'; // The document (which is SSR-only) needs to be customized to expose the locale\n// data for the user's locale for React Intl to work in the browser.\n\nconst GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tpadding: 0;\n\t\tmargin: 0;\n        font-family: '-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif'\n\t}\n`;\n\nclass MyDocument extends Document {\n  static getInitialProps(context) {\n    const sheet = new ServerStyleSheet();\n    const page = context.renderPage(App => props => sheet.collectStyles(__jsx(App, props)));\n    const styleTags = sheet.getStyleElement();\n    return _objectSpread(_objectSpread({}, page), {}, {\n      styleTags\n    });\n  }\n\n  render() {\n    const kakaoUrl = `http://dapi.kakao.com/v2/maps/sdk.js?appkey=${'2e780152a42673e30ed1cc206aedc7da'}`;\n    return __jsx(Html, null, __jsx(Head, null, this.props.styleTags, __jsx(\"script\", {\n      type: \"text/javascript\",\n      src: kakaoUrl\n    })), __jsx(\"body\", null, __jsx(GlobalStyle, null), __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}\n\nMyDocument.propTypes = {\n  styleTags: PropTypes.array.isRequired\n};\nexport default MyDocument;\n/*\n기본 _document.js 모습일 것 같다\n            <html>\n                <Head />>\n                <body>\n                    <Main />\n                    <NextScript />\n                </body>\n            </html>\n */","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/kjglass-proj/pages/_document.js"],"names":["Document","Head","Main","NextScript","Html","PropTypes","ServerStyleSheet","createGlobalStyle","GlobalStyle","MyDocument","getInitialProps","context","sheet","page","renderPage","App","props","collectStyles","styleTags","getStyleElement","render","kakaoUrl","propTypes","array","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,EAA2CC,IAA3C,QAAuD,eAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,mBAApD,C,CAEA;AACA;;AAEA,MAAMC,WAAW,GAAGD,iBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA,CANA;;AASA,MAAME,UAAN,SAAyBT,QAAzB,CAAkC;AACR,SAAfU,eAAe,CAACC,OAAD,EAAU;AAC5B,UAAMC,KAAK,GAAG,IAAIN,gBAAJ,EAAd;AACA,UAAMO,IAAI,GAAGF,OAAO,CAACG,UAAR,CAAoBC,GAAD,IAAUC,KAAD,IAAWJ,KAAK,CAACK,aAAN,CAAoB,MAAC,GAAD,EAASD,KAAT,CAApB,CAAvC,CAAb;AACA,UAAME,SAAS,GAAGN,KAAK,CAACO,eAAN,EAAlB;AACA,2CAAYN,IAAZ;AAAkBK,MAAAA;AAAlB;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAI,+CAA8C,kCAAmC,EAAnG;AAEA,WACI,MAAC,IAAD,QACI,MAAC,IAAD,QACK,KAAKL,KAAL,CAAWE,SADhB,EAEI;AAAQ,MAAA,IAAI,EAAC,iBAAb;AAA+B,MAAA,GAAG,EAAEG;AAApC,MAFJ,CADJ,EAKI,oBACI,MAAC,WAAD,OADJ,EAEI,MAAC,IAAD,OAFJ,EAGI,MAAC,UAAD,OAHJ,CALJ,CADJ;AAaH;;AAxB6B;;AA2BlCZ,UAAU,CAACa,SAAX,GAAuB;AACnBJ,EAAAA,SAAS,EAAEb,SAAS,CAACkB,KAAV,CAAgBC;AADR,CAAvB;AAIA,eAAef,UAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Document, { Head, Main, NextScript, Html } from 'next/document';\nimport PropTypes from 'prop-types';\nimport { ServerStyleSheet, createGlobalStyle } from 'styled-components';\n\n// The document (which is SSR-only) needs to be customized to expose the locale\n// data for the user's locale for React Intl to work in the browser.\n\nconst GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tpadding: 0;\n\t\tmargin: 0;\n        font-family: '-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif'\n\t}\n`;\n\n\nclass MyDocument extends Document {\n    static getInitialProps(context) {\n        const sheet = new ServerStyleSheet();\n        const page = context.renderPage((App) => (props) => sheet.collectStyles(<App {...props} />));\n        const styleTags = sheet.getStyleElement();\n        return { ...page, styleTags };\n    }\n\n    render() {\n        const kakaoUrl = `http://dapi.kakao.com/v2/maps/sdk.js?appkey=${'2e780152a42673e30ed1cc206aedc7da'}`;\n\n        return (\n            <Html>\n                <Head>\n                    {this.props.styleTags}\n                    <script type=\"text/javascript\" src={kakaoUrl}></script>\n                </Head>\n                <body>\n                    <GlobalStyle />\n                    <Main />\n                    <NextScript />\n                </body>\n            </Html>\n        );\n    }\n}\n\nMyDocument.propTypes = {\n    styleTags: PropTypes.array.isRequired,\n};\n\nexport default MyDocument;\n\n/*\n기본 _document.js 모습일 것 같다\n            <html>\n                <Head />>\n                <body>\n                    <Main />\n                    <NextScript />\n                </body>\n            </html>\n */\n"]},"metadata":{},"sourceType":"module"}