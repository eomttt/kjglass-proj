{"ast":null,"code":"var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { observable, action, toJS } from 'mobx';\n\nconst glassesData = require('../data/glass.json'); // import glassDummy from '../dummy/glassItem';\n// import expendablesItemDummy from '../dummy/expendablesItem';\n\n\nlet ItemsStore = (_class = (_temp = class ItemsStore {\n  constructor() {\n    _initializerDefineProperty(this, \"glasses\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"expendables\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"setItems\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"getItemInfo\", _descriptor4, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"glasses\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return glassesData;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"expendables\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"setItems\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return expendables => {\n      this.expendables = expendables;\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"getItemInfo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return params => {\n      const {\n        type,\n        itemId,\n        specificationId\n      } = params;\n      let selectedItems = [];\n\n      if (type === 'glasses') {\n        selectedItems = [...toJS(this.glasses)];\n      } else {\n        selectedItems = [...toJS(this.expendables)];\n      }\n\n      if (selectedItems.length > 0) {\n        const selectedItem = selectedItems && selectedItems.filter(item => {\n          if (item) {\n            return item.id === itemId;\n          }\n\n          return false;\n        })[0];\n        const selectedSpecificItem = selectedItem && selectedItem.specification.filter(specificationItem => specificationItem.id === specificationId)[0];\n        return {\n          selectedItem,\n          selectedSpecificItem\n        };\n      }\n\n      return null;\n    };\n  }\n})), _class);\nexport { ItemsStore as default };","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/kjglass-proj/stores/items.js"],"names":["observable","action","toJS","glassesData","require","ItemsStore","expendables","params","type","itemId","specificationId","selectedItems","glasses","length","selectedItem","filter","item","id","selectedSpecificItem","specification","specificationItem"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,QAAyC,MAAzC;;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B,C,CAEA;AACA;;;IAEqBC,U,sBAAN,MAAMA,UAAN,CAAiB;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA,C,iFAC3BL,U;;;;;WAAqBG,W;;+EAErBH,U;;;;;WAAyB,E;;4EAEzBC,M;;;;;WAAmBK,WAAD,IAAiB;AAClC,WAAKA,WAAL,GAAmBA,WAAnB;AACD,K;;+EAEAL,M;;;;;WAAsBM,MAAD,IAAY;AAChC,YAAM;AACJC,QAAAA,IADI;AACEC,QAAAA,MADF;AACUC,QAAAA;AADV,UAEFH,MAFJ;AAIA,UAAII,aAAa,GAAG,EAApB;;AAEA,UAAIH,IAAI,KAAK,SAAb,EAAwB;AACtBG,QAAAA,aAAa,GAAG,CAAC,GAAGT,IAAI,CAAC,KAAKU,OAAN,CAAR,CAAhB;AACD,OAFD,MAEO;AACLD,QAAAA,aAAa,GAAG,CAAC,GAAGT,IAAI,CAAC,KAAKI,WAAN,CAAR,CAAhB;AACD;;AAED,UAAIK,aAAa,CAACE,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,cAAMC,YAAY,GAAGH,aAAa,IAAIA,aAAa,CAACI,MAAd,CAAsBC,IAAD,IAAU;AACnE,cAAIA,IAAJ,EAAU;AACR,mBAAOA,IAAI,CAACC,EAAL,KAAYR,MAAnB;AACD;;AACD,iBAAO,KAAP;AACD,SALqC,EAKnC,CALmC,CAAtC;AAMA,cAAMS,oBAAoB,GAAGJ,YAAY,IAAIA,YAAY,CAACK,aAAb,CAA2BJ,MAA3B,CAAmCK,iBAAD,IAAuBA,iBAAiB,CAACH,EAAlB,KAAyBP,eAAlF,EAAmG,CAAnG,CAA7C;AACA,eAAO;AACLI,UAAAA,YADK;AAELI,UAAAA;AAFK,SAAP;AAID;;AACD,aAAO,IAAP;AACD,K;;;SApCgBb,U","sourcesContent":["import { observable, action, toJS } from 'mobx';\n\nconst glassesData = require('../data/glass.json');\n\n// import glassDummy from '../dummy/glassItem';\n// import expendablesItemDummy from '../dummy/expendablesItem';\n\nexport default class ItemsStore {\n    @observable glasses = glassesData;\n\n    @observable expendables = [];\n\n    @action setItems = (expendables) => {\n      this.expendables = expendables;\n    }\n\n    @action getItemInfo = (params) => {\n      const {\n        type, itemId, specificationId,\n      } = params;\n\n      let selectedItems = [];\n\n      if (type === 'glasses') {\n        selectedItems = [...toJS(this.glasses)];\n      } else {\n        selectedItems = [...toJS(this.expendables)];\n      }\n\n      if (selectedItems.length > 0) {\n        const selectedItem = selectedItems && selectedItems.filter((item) => {\n          if (item) {\n            return item.id === itemId;\n          }\n          return false;\n        })[0];\n        const selectedSpecificItem = selectedItem && selectedItem.specification.filter((specificationItem) => specificationItem.id === specificationId)[0];\n        return {\n          selectedItem,\n          selectedSpecificItem,\n        };\n      }\n      return null;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}