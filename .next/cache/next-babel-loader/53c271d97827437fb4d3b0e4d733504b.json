{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\n/* eslint-disable prefer-destructuring */\nimport { observable, action, toJS } from 'mobx';\nvar BaskestStore = (_class = (_temp = function BaskestStore() {\n  _classCallCheck(this, BaskestStore);\n\n  _initializerDefineProperty(this, \"glassItems\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"initBasket\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"addBasket\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"removeBasket\", _descriptor4, this);\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"glassItems\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {\n      glass: [],\n      expendables: []\n    };\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"initBasket\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return function () {\n      var glassLocalStorageItems = JSON.parse(localStorage.getItem('glass'));\n      var expendableLocalStorageItems = JSON.parse(localStorage.getItem('expendables'));\n      _this.glassItems = {\n        glass: glassLocalStorageItems || [],\n        expendables: expendableLocalStorageItems || []\n      };\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"addBasket\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (params) {\n      var type = params.type,\n          itemId = params.itemId,\n          count = params.count,\n          specificationItemId = params.specificationItemId,\n          classifiedId = params.classifiedId;\n      var itemType = type;\n\n      if (type.indexOf('expendables') > -1) {\n        itemType = type.split('_')[0];\n      }\n\n      var findedItem = _this2.glassItems[itemType] && _this2.glassItems[itemType].filter(function (item) {\n        var toJSItem = toJS(item);\n\n        if (toJSItem.itemId === itemId) {\n          if (toJSItem.specificationItemId === specificationItemId) {\n            return true;\n          }\n        }\n\n        return false;\n      })[0];\n\n      if (toJS(findedItem)) {\n        _this2.glassItems[itemType] = _this2.glassItems[itemType] && _this2.glassItems[itemType].map(function (item) {\n          var toJSItem = toJS(item);\n\n          if (toJSItem.itemId === itemId) {\n            if (toJSItem.specificationItemId === specificationItemId) {\n              return {\n                itemId: item.itemId,\n                count: Number(item.count) + Number(count),\n                specificationItemId: item.specificationItemId,\n                classifiedId: classifiedId\n              };\n            }\n          }\n\n          return item;\n        });\n      } else {\n        _this2.glassItems[itemType].push({\n          itemId: itemId,\n          count: count,\n          specificationItemId: specificationItemId,\n          classifiedId: classifiedId\n        });\n      }\n\n      localStorage.setItem(itemType, JSON.stringify(toJS(_this2.glassItems[itemType])));\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"removeBasket\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function (params) {\n      var type = params.type,\n          itemId = params.itemId,\n          specificationItemId = params.specificationItemId;\n      var itemType = type;\n\n      if (type.indexOf('expendables') > -1) {\n        itemType = type.split('_')[0];\n      }\n\n      var findedItem = _this3.glassItems[itemType] && _this3.glassItems[itemType].filter(function (item) {\n        var toJSItem = toJS(item);\n\n        if (toJSItem.itemId === itemId) {\n          if (toJSItem.specificationItemId === specificationItemId) {\n            return true;\n          }\n        }\n\n        return false;\n      })[0];\n\n      if (toJS(findedItem)) {\n        _this3.glassItems[itemType] = _this3.glassItems[itemType].filter(function (item) {\n          var toJSItem = toJS(item);\n\n          if (toJSItem.itemId === itemId) {\n            if (toJSItem.specificationItemId === specificationItemId) {\n              return false;\n            }\n          }\n\n          return true;\n        });\n      }\n\n      localStorage.setItem(itemType, JSON.stringify(toJS(_this3.glassItems[itemType])));\n    };\n  }\n})), _class);\nexport { BaskestStore as default };","map":null,"metadata":{},"sourceType":"module"}