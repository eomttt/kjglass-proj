{"ast":null,"code":"var __jsx = React.createElement;\nimport { Provider } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { getExpendables } from '../containers/Data';\nimport BascketStore from '../stores/bascket';\nimport ItemsStore from '../stores/items';\nconst bascketStore = new BascketStore();\nconst itemsStore = new ItemsStore();\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  const getDatas = () => {\n    try {\n      const datum = getExpendables();\n      itemsStore.setItems(datum);\n    } catch (error) {\n      console.log('Get data error', error);\n    }\n  };\n\n  useEffect(() => {\n    bascketStore.initBasket();\n    getDatas();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    bascketStore: bascketStore,\n    itemsStore: itemsStore\n  }, __jsx(Component, pageProps)));\n};\n\nApp.getInitialProps = async context => {\n  const {\n    ctx,\n    Component\n  } = context;\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  return {\n    pageProps\n  };\n};\n\nApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\nexport default App;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/kjglass-proj/pages/_app.js"],"names":["Provider","PropTypes","React","useEffect","getExpendables","BascketStore","ItemsStore","bascketStore","itemsStore","App","Component","pageProps","getDatas","datum","setItems","error","console","log","initBasket","getInitialProps","context","ctx","propTypes","elementType","isRequired","object"],"mappings":";AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,MAAMC,YAAY,GAAG,IAAIF,YAAJ,EAArB;AACA,MAAMG,UAAU,GAAG,IAAIF,UAAJ,EAAnB;;AAEA,MAAMG,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AACtC,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAI;AACA,YAAMC,KAAK,GAAGT,cAAc,EAA5B;AACAI,MAAAA,UAAU,CAACM,QAAX,CAAoBD,KAApB;AACH,KAHD,CAGE,OAAOE,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACH;AACJ,GAPD;;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,YAAY,CAACW,UAAb;AACAN,IAAAA,QAAQ;AACX,GAHQ,EAGN,EAHM,CAAT;AAKA,SACI,4BACI,MAAC,QAAD;AAAU,IAAA,YAAY,EAAEL,YAAxB;AAAsC,IAAA,UAAU,EAAEC;AAAlD,KACI,MAAC,SAAD,EAAeG,SAAf,CADJ,CADJ,CADJ;AAOH,CAtBD;;AAwBAF,GAAG,CAACU,eAAJ,GAAsB,MAAOC,OAAP,IAAmB;AACrC,QAAM;AAAEC,IAAAA,GAAF;AAAOX,IAAAA;AAAP,MAAqBU,OAA3B;AACA,MAAIT,SAAS,GAAG,EAAhB;;AAEA,MAAID,SAAS,CAACS,eAAd,EAA+B;AAC3BR,IAAAA,SAAS,GAAG,MAAMD,SAAS,CAACS,eAAV,CAA0BE,GAA1B,CAAlB;AACH;;AAED,SAAO;AAAEV,IAAAA;AAAF,GAAP;AACH,CATD;;AAWAF,GAAG,CAACa,SAAJ,GAAgB;AACZZ,EAAAA,SAAS,EAAET,SAAS,CAACsB,WAAV,CAAsBC,UADrB;AAEZb,EAAAA,SAAS,EAAEV,SAAS,CAACwB,MAAV,CAAiBD;AAFhB,CAAhB;AAKA,eAAef,GAAf","sourcesContent":["import { Provider } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { getExpendables } from '../containers/Data';\nimport BascketStore from '../stores/bascket';\nimport ItemsStore from '../stores/items';\n\nconst bascketStore = new BascketStore();\nconst itemsStore = new ItemsStore();\n\nconst App = ({ Component, pageProps }) => {\n    const getDatas = () => {\n        try {\n            const datum = getExpendables();\n            itemsStore.setItems(datum);\n        } catch (error) {\n            console.log('Get data error', error);\n        }\n    };\n\n    useEffect(() => {\n        bascketStore.initBasket();\n        getDatas();\n    }, []);\n\n    return (\n        <>\n            <Provider bascketStore={bascketStore} itemsStore={itemsStore}>\n                <Component {...pageProps} />\n            </Provider>\n        </>\n    );\n};\n\nApp.getInitialProps = async (context) => {\n    const { ctx, Component } = context;\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n        pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return { pageProps };\n};\n\nApp.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    pageProps: PropTypes.object.isRequired,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}