{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { subPointColor } from '../../styles/style';\nvar Container = styled.div.withConfig({\n  displayName: \"ShopItemsByClassified__Container\",\n  componentId: \"bikx0h-0\"\n})([\"margin:10px;width:100%;\"]);\nvar Title = styled.div.withConfig({\n  displayName: \"ShopItemsByClassified__Title\",\n  componentId: \"bikx0h-1\"\n})([\"width:100%;text-align:left;font-size:20px;margin-left:10px;margin-bottom:10px;color:\", \"\"], subPointColor);\nvar SubTitle = styled.div.withConfig({\n  displayName: \"ShopItemsByClassified__SubTitle\",\n  componentId: \"bikx0h-2\"\n})([\"width:100%;text-align:left;font-size:15px;margin-left:10px;margin-bottom:20px;color:\", \";\"], subPointColor);\nvar Content = styled.div.withConfig({\n  displayName: \"ShopItemsByClassified__Content\",\n  componentId: \"bikx0h-3\"\n})([\"cursor:pointer;display:inline-block;margin-left:15px;margin-right:15px;margin-bottom:15px;text-decoration:underline;&:hover{color:\", \";}\"], subPointColor);\nvar ClassifiedTitle = styled.div.withConfig({\n  displayName: \"ShopItemsByClassified__ClassifiedTitle\",\n  componentId: \"bikx0h-4\"\n})([\"font-size:20px;margin-top:10px;margin-bottom:10px;margin-left:15px;font-weight:bold;\"]);\n\nvar ShopItemsByClassified = function ShopItemsByClassified(_ref) {\n  var shopId = _ref.shopId,\n      products = _ref.products,\n      clickClassify = _ref.clickClassify;\n  var classified = useMemo(function () {\n    var sortedProducts = Object.keys(products).sort(function (a, b) {\n      var lowA = a.toLowerCase();\n      var lowB = b.toLowerCase();\n      if (lowA === lowB) return 0;\n      return lowA < lowB ? -1 : 1;\n    });\n    return sortedProducts.reduce(function (acc, cur) {\n      var headWord = cur.toUpperCase().slice(0, 1);\n\n      if (acc[headWord]) {\n        acc[headWord] = [].concat(_toConsumableArray(acc[headWord]), [cur]);\n      } else {\n        acc[headWord] = [cur];\n      }\n\n      return acc;\n    }, {});\n  }, [products]);\n  return __jsx(Container, null, __jsx(Title, null, shopId === '1' ? '광진이화학 제품군' : '기타 제품군'), __jsx(SubTitle, null, '분류를 선택해 주세요.'), Object.keys(classified).map(function (alphabet) {\n    return __jsx(React.Fragment, {\n      key: alphabet\n    }, __jsx(ClassifiedTitle, null, alphabet), classified[alphabet].map(function (classify) {\n      return __jsx(Content, {\n        key: classify,\n        onClick: function onClick() {\n          return clickClassify(classify);\n        }\n      }, classify);\n    }));\n  }));\n};\n\nexport default ShopItemsByClassified;","map":null,"metadata":{},"sourceType":"module"}