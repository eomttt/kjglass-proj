{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport Router from 'next/router';\nimport PropTypes from 'prop-types';\nimport NavBarComponent from '../../components/common/NavBar';\nimport SideBarItems from '../../components/common/SideBarItems';\nimport PopupMenu from '../../components/common/PopupMenu';\nimport NavBarItems from './NavBarItems';\n\nvar NavBar = function NavBar(_ref) {\n  _s();\n\n  var sideMenuItems = _ref.sideMenuItems,\n      clickSideItem = _ref.clickSideItem;\n\n  var _useState = useState(false),\n      isOpenSideMenu = _useState[0],\n      setIsOpenSideMenu = _useState[1];\n\n  var _useState2 = useState(0),\n      scrollTop = _useState2[0],\n      setScrollTop = _useState2[1];\n\n  var fixBodyStyle = useCallback(function () {\n    var _window = window,\n        pageYOffset = _window.pageYOffset;\n    var _document = document,\n        body = _document.body;\n    body.style.position = 'fixed';\n    body.style.overflow = 'hidden';\n    body.style.left = '0';\n    body.style.right = '0';\n    body.style.top = \"-\".concat(pageYOffset, \"px\");\n    setScrollTop(pageYOffset); // tslint:disable-next-line: align\n  }, []);\n  var releaseBodyStyle = useCallback(function () {\n    var _document2 = document,\n        body = _document2.body;\n    body.style.position = '';\n    body.style.overflow = '';\n    body.style.left = '';\n    body.style.right = '';\n    body.style.top = '';\n    window.scrollTo(0, scrollTop); // tslint:disable-next-line: align\n  }, [scrollTop]);\n  var moveMainPage = useCallback(function () {\n    Router.push({\n      pathname: '/'\n    });\n  }, []);\n  var openSideMenu = useCallback(function () {\n    setIsOpenSideMenu(true);\n    fixBodyStyle();\n  }, [fixBodyStyle]);\n  var closeSideMenu = useCallback(function () {\n    setIsOpenSideMenu(false);\n    releaseBodyStyle();\n  }, [releaseBodyStyle]);\n  var onClickSideItem = useCallback(function (itemId) {\n    closeSideMenu();\n    clickSideItem(itemId);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(NavBarComponent, {\n    moveMainPage: moveMainPage,\n    openSideMenu: openSideMenu\n  }, __jsx(NavBarItems, null)), isOpenSideMenu && __jsx(PopupMenu, {\n    closePopup: closeSideMenu\n  }, __jsx(SideBarItems, {\n    sideBarItems: sideMenuItems,\n    clickSideItem: onClickSideItem\n  })));\n};\n\n_s(NavBar, \"1513XE0uf8h+1MquDNnlvTHO5QQ=\");\n\n_c = NavBar;\nNavBar.propTypes = {\n  sideMenuItems: PropTypes.array.isRequired,\n  clickSideItem: PropTypes.func.isRequired\n};\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/kjglass-proj/containers/common/NavBar.jsx"],"names":["React","useState","useCallback","Router","PropTypes","NavBarComponent","SideBarItems","PopupMenu","NavBarItems","NavBar","sideMenuItems","clickSideItem","isOpenSideMenu","setIsOpenSideMenu","scrollTop","setScrollTop","fixBodyStyle","window","pageYOffset","document","body","style","position","overflow","left","right","top","releaseBodyStyle","scrollTo","moveMainPage","push","pathname","openSideMenu","closeSideMenu","onClickSideItem","itemId","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Router from 'next/router';\nimport PropTypes from 'prop-types';\n\nimport NavBarComponent from '../../components/common/NavBar';\nimport SideBarItems from '../../components/common/SideBarItems';\nimport PopupMenu from '../../components/common/PopupMenu';\n\nimport NavBarItems from './NavBarItems';\n\nconst NavBar = ({ sideMenuItems, clickSideItem }) => {\n    const [isOpenSideMenu, setIsOpenSideMenu] = useState(false);\n\n    const [scrollTop, setScrollTop] = useState(0);\n\n    const fixBodyStyle = useCallback(() => {\n        const { pageYOffset } = window;\n        const { body } = document;\n\n        body.style.position = 'fixed';\n        body.style.overflow = 'hidden';\n        body.style.left = '0';\n        body.style.right = '0';\n        body.style.top = `-${pageYOffset}px`;\n\n        setScrollTop(pageYOffset);\n    // tslint:disable-next-line: align\n    }, []);\n\n    const releaseBodyStyle = useCallback(() => {\n        const { body } = document;\n\n        body.style.position = '';\n        body.style.overflow = '';\n        body.style.left = '';\n        body.style.right = '';\n        body.style.top = '';\n\n        window.scrollTo(0, scrollTop);\n    // tslint:disable-next-line: align\n    }, [scrollTop]);\n\n    const moveMainPage = useCallback(() => {\n        Router.push({\n            pathname: '/',\n        });\n    }, []);\n\n    const openSideMenu = useCallback(() => {\n        setIsOpenSideMenu(true);\n        fixBodyStyle();\n    }, [fixBodyStyle]);\n\n    const closeSideMenu = useCallback(() => {\n        setIsOpenSideMenu(false);\n        releaseBodyStyle();\n    }, [releaseBodyStyle]);\n\n    const onClickSideItem = useCallback((itemId) => {\n        closeSideMenu();\n        clickSideItem(itemId);\n    }, []);\n\n    return (\n        <>\n            <NavBarComponent moveMainPage={moveMainPage} openSideMenu={openSideMenu}>\n                <NavBarItems />\n            </NavBarComponent>\n            {\n                isOpenSideMenu\n                && (\n                    <PopupMenu closePopup={closeSideMenu}>\n                        <SideBarItems\n                            sideBarItems={sideMenuItems}\n                            clickSideItem={onClickSideItem}\n                        />\n                    </PopupMenu>\n                )\n            }\n        </>\n    );\n};\n\nNavBar.propTypes = {\n    sideMenuItems: PropTypes.array.isRequired,\n    clickSideItem: PropTypes.func.isRequired,\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}