{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport AppLayout from '../components/AppLayout';\nimport Header from '../components/common/Header';\nimport Footer from '../components/common/Footer';\nimport SideBar from '../components/common/SideBar';\nimport { getExpendable } from '../containers/Data';\nimport NavBar from '../containers/common/NavBar';\nimport GlassItems from '../containers/shop/GlassItems';\nimport ExpendablesItems from '../containers/shop/ExpendablesItems';\nimport DownloadCatalog from '../containers/shop/DownloadCatalog';\nimport { ViewContainer, ViewContent } from '../styles/style';\n\nconst glassesData = require('../data/glass.json');\n\nconst Shop = ({\n  id,\n  classifiedId,\n  productId,\n  shopwMetaData\n}) => {\n  const {\n    0: sideBarItems,\n    1: setSideBarItems\n  } = useState([{\n    text: '광진이화학 제품군',\n    id: 1,\n    clicked: false\n  }, {\n    text: '기타 제품군',\n    id: 2,\n    clicked: false\n  }, {\n    text: '카타로그 다운로드',\n    id: 3,\n    clicked: false\n  }]);\n  const setSelectedItem = useCallback(sideId => {\n    const sideBarIds = Object.values(sideBarItems).map(sideBarItem => sideBarItem.id);\n    const isSupportSideId = sideBarIds.includes(+sideId);\n    const itemId = isSupportSideId ? +sideId : 1;\n    const newItmes = sideBarItems.reduce((acc, cur) => {\n      acc.push(_objectSpread(_objectSpread({}, cur), {}, {\n        clicked: cur.id === itemId\n      }));\n      return acc;\n    }, []);\n    setSideBarItems(newItmes);\n  }, [sideBarItems]);\n  useEffect(() => {\n    setSelectedItem(id);\n  }, []);\n  const clickSideItem = useCallback(itemId => {\n    setSelectedItem(itemId);\n    Router.push({\n      pathname: '/shop',\n      query: {\n        id: itemId\n      }\n    });\n  }, [sideBarItems]);\n  return __jsx(AppLayout, {\n    metaInfo: shopwMetaData\n  }, __jsx(NavBar, {\n    sideMenuItems: sideBarItems,\n    clickSideItem: clickSideItem\n  }), __jsx(ViewContainer, null, __jsx(Header, null), __jsx(ViewContent, null, __jsx(SideBar, {\n    sideBarTitle: '제품검색',\n    sideBarItems: sideBarItems,\n    clickSideItem: clickSideItem\n  }), (!id || id === '1') && __jsx(GlassItems, {\n    classifiedId: classifiedId,\n    productId: productId\n  }), id === '2' && __jsx(ExpendablesItems, {\n    classifiedId: classifiedId,\n    productId: productId\n  }), id === '3' && __jsx(DownloadCatalog, {\n    productId: productId\n  }))), __jsx(Footer, null));\n};\n\nShop.getInitialProps = context => {\n  const {\n    query\n  } = context;\n  const {\n    id,\n    classifiedId,\n    productId\n  } = query;\n  let shopwMetaData = {\n    title: null,\n    decription: null,\n    image: null\n  };\n\n  if (classifiedId && productId) {\n    try {\n      const alphabet = decodeURI(classifiedId)[0];\n      let findedData = {};\n\n      if (!id || id === '1') {\n        const data = glassesData.filter(item => item.id === productId);\n        findedData = _objectSpread({}, data[0]);\n      } else {\n        findedData = getExpendable(alphabet, productId);\n      }\n\n      const {\n        title,\n        content,\n        image\n      } = findedData;\n      shopwMetaData = {\n        title,\n        image,\n        decription: content ? content.reduce((acc, cur) => `${acc}, ${cur}`, '') : ''\n      };\n    } catch (error) {\n      console.log('Get initialProps shop error', error);\n    }\n  }\n\n  return {\n    id,\n    productId,\n    shopwMetaData,\n    classifiedId: classifiedId ? decodeURI(classifiedId) : null\n  };\n};\n\nShop.defaultProps = {\n  id: null,\n  classifiedId: null,\n  productId: null,\n  shopwMetaData: {}\n};\nexport default Shop;","map":null,"metadata":{},"sourceType":"module"}