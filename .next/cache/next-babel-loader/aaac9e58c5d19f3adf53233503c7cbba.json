{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Router from 'next/router';\nimport NoticesComp from '../../components/customercenter/Notices';\nimport NoticeComp from '../../components/customercenter/Notice';\nimport dummy from '../../data/notices';\n\nvar Notice = function Notice(_ref) {\n  var noticeId = _ref.noticeId;\n\n  var _useState = useState(dummy),\n      notices = _useState[0];\n\n  var _useState2 = useState(null),\n      selectedNotice = _useState2[0],\n      setSelectedNotice = _useState2[1];\n\n  var getSelectedNotice = useCallback(function (id) {\n    return Object.values(notices).filter(function (notice) {\n      return notice.id === id;\n    });\n  }, [notices]);\n  var clickNotice = useCallback(function (id) {\n    var selectedProductArr = getSelectedNotice(id);\n    setSelectedNotice(selectedProductArr[0]);\n    Router.push({\n      pathname: '/customercenter',\n      query: {\n        id: '1',\n        noticeId: selectedProductArr[0].id\n      }\n    });\n  }, []);\n  useEffect(function () {\n    if (noticeId) {\n      var selectedProductArr = getSelectedNotice(noticeId);\n      setSelectedNotice(selectedProductArr[0]);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, noticeId && selectedNotice ? __jsx(NoticeComp, {\n    selectedNotice: selectedNotice\n  }) : __jsx(NoticesComp, {\n    notices: notices,\n    clickNotice: clickNotice\n  }));\n};\n\nNotice.defaultProps = {\n  noticeId: null\n};\nexport default Notice;","map":null,"metadata":{},"sourceType":"module"}