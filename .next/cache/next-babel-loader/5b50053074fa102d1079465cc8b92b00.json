{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport { Provider } from 'mobx-react';\nimport React, { useEffect } from 'react';\nimport { getExpendables } from '../containers/Data';\nimport BascketStore from '../stores/bascket';\nimport ItemsStore from '../stores/items';\nvar bascketStore = new BascketStore();\nvar itemsStore = new ItemsStore();\n\nvar App = function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var getDatas = function getDatas() {\n    try {\n      var datum = getExpendables();\n      itemsStore.setItems(datum);\n    } catch (error) {\n      console.log('Get data error', error);\n    }\n  };\n\n  useEffect(function () {\n    bascketStore.initBasket();\n    getDatas();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    bascketStore: bascketStore,\n    itemsStore: itemsStore\n  }, __jsx(Component, pageProps)));\n};\n\nApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var ctx, Component, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = context.ctx, Component = context.Component;\n            pageProps = {};\n\n            if (!Component.getInitialProps) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 5;\n            return Component.getInitialProps(ctx);\n\n          case 5:\n            pageProps = _context.sent;\n\n          case 6:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}