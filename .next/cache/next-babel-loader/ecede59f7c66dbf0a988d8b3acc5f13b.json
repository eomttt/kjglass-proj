{"ast":null,"code":"var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { observable, action, toJS } from 'mobx';\n\nconst glassesData = require('../data/glass.json'); // import glassDummy from '../dummy/glassItem';\n// import expendablesItemDummy from '../dummy/expendablesItem';\n\n\nlet ItemsStore = (_class = (_temp = class ItemsStore {\n  constructor() {\n    _initializerDefineProperty(this, \"glasses\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"expendables\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"setItems\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"getItemInfo\", _descriptor4, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"glasses\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return glassesData;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"expendables\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"setItems\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return expendables => {\n      this.expendables = expendables;\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"getItemInfo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return params => {\n      const {\n        type,\n        itemId,\n        specificationId\n      } = params;\n      let selectedItems = [];\n\n      if (type === 'glasses') {\n        selectedItems = [...toJS(this.glasses)];\n      } else {\n        selectedItems = [...toJS(this.expendables)];\n      }\n\n      if (selectedItems.length > 0) {\n        const selectedItem = selectedItems && selectedItems.filter(item => {\n          if (item) {\n            return item.id === itemId;\n          }\n\n          return false;\n        })[0];\n        const selectedSpecificItem = selectedItem && selectedItem.specification.filter(specificationItem => specificationItem.id === specificationId)[0];\n        return {\n          selectedItem,\n          selectedSpecificItem\n        };\n      }\n\n      return null;\n    };\n  }\n})), _class);\nexport { ItemsStore as default };","map":null,"metadata":{},"sourceType":"module"}