{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Router from 'next/router';\nimport PropTypes from 'prop-types';\nimport ShopItemsLoading from '../../components/shop/ShopItemsLoading';\nimport ShopItemsComp from '../../components/shop/ShopItmes';\nimport ShopItemDetailComp from '../../components/shop/ShopItemDetail';\nimport ShopItemsByClassified from '../../components/shop/ShopItemsByClassified';\n\nconst ShopItems = ({\n  shopId,\n  products,\n  classifiedId,\n  productId\n}) => {\n  const {\n    0: productsByClassify,\n    1: setProductsByClassify\n  } = useState({});\n  const {\n    0: selectedProducts,\n    1: setSelectedProducts\n  } = useState([]);\n  const {\n    0: sortedSelectedProducts,\n    1: setSortedSelectedProducts\n  } = useState([]);\n  const {\n    0: selectedProduct,\n    1: setSelectedProduct\n  } = useState(null);\n  const {\n    0: isSortByTitle,\n    1: setIsSortByTitle\n  } = useState(false);\n  const getSelectedProduct = useCallback((candidates, id) => Object.values(candidates).filter(product => {\n    if (product) {\n      return product.id === id;\n    }\n  }), []);\n  const clickClassify = useCallback(classify => {\n    setSelectedProducts([...productsByClassify[classify]]);\n    setSortedSelectedProducts([...productsByClassify[classify]]);\n    Router.push({\n      pathname: '/shop',\n      query: {\n        id: shopId,\n        classifiedId: encodeURI(classify)\n      }\n    });\n  }, [shopId, productsByClassify]);\n  const clickProduct = useCallback(id => {\n    const selectedProductArr = getSelectedProduct(sortedSelectedProducts, id);\n    setSelectedProduct(selectedProductArr[0]);\n    Router.push({\n      pathname: '/shop',\n      query: {\n        id: shopId,\n        classifiedId: encodeURI(classifiedId),\n        productId: selectedProductArr[0].id\n      }\n    });\n  }, [shopId, classifiedId, sortedSelectedProducts]);\n\n  const sortByTitle = () => {\n    const newProducts = [...sortedSelectedProducts];\n    newProducts.sort((a, b) => {\n      if (isSortByTitle) {\n        if (a.title < b.title) {\n          return 1;\n        }\n\n        if (a.title > b.title) {\n          return -1;\n        }\n      } else {\n        if (a.title < b.title) {\n          return -1;\n        }\n\n        if (a.title > b.title) {\n          return 1;\n        }\n      }\n\n      return 0;\n    });\n    setIsSortByTitle(!isSortByTitle);\n    setSortedSelectedProducts(newProducts);\n  };\n\n  const getItemNumber = product => {\n    if (product.specification) {\n      return `${product.specification[0].number.split('-')[0]}-${product.specification[0].number.split('-')[1]}`;\n    }\n\n    return '';\n  };\n\n  const findByText = findedText => {\n    const lowerText = findedText.toLowerCase();\n    const newProducts = products.filter(product => {\n      if (product.title.toLowerCase().indexOf(lowerText) > -1) {\n        return true;\n      }\n\n      if (getItemNumber(product).toLowerCase().indexOf(lowerText) > -1) {\n        return true;\n      }\n\n      return false;\n    });\n    setSortedSelectedProducts(newProducts);\n  };\n\n  const setInitItems = () => {\n    setSortedSelectedProducts([...selectedProducts]);\n    setIsSortByTitle(false);\n  };\n\n  useEffect(() => {\n    const classifiedProducts = products.reduce((acc, cur) => {\n      if (cur) {\n        if (cur.classify) {\n          if (acc[cur.classify]) {\n            acc[cur.classify].push(cur);\n          } else {\n            acc[cur.classify] = [cur];\n          }\n        }\n      }\n\n      return acc;\n    }, {});\n\n    if (productId) {\n      const selectedProductArr = getSelectedProduct(products, productId);\n      setSelectedProduct(selectedProductArr[0]);\n    }\n\n    if (classifiedId && classifiedProducts[classifiedId]) {\n      setSelectedProducts([...classifiedProducts[classifiedId]]);\n      setSortedSelectedProducts([...classifiedProducts[classifiedId]]);\n    }\n\n    setProductsByClassify(classifiedProducts);\n  }, [shopId, products]);\n\n  const renderShops = () => {\n    if (!products || products.length < 1) {\n      return __jsx(ShopItemsLoading, null);\n    }\n\n    if (classifiedId && productId && selectedProduct) {\n      return __jsx(ShopItemDetailComp, {\n        type: selectedProduct.type,\n        id: selectedProduct.id,\n        image: selectedProduct.image,\n        title: selectedProduct.title,\n        content: selectedProduct.content,\n        specification: selectedProduct.specification,\n        tableItems: selectedProduct.tableItems || [],\n        classifiedId: selectedProduct.classify\n      });\n    }\n\n    if (classifiedId) {\n      return __jsx(ShopItemsComp, {\n        products: sortedSelectedProducts,\n        onClickProduct: clickProduct,\n        sortByTitle: sortByTitle,\n        isSortByTitle: isSortByTitle,\n        findByText: findByText,\n        setInitItems: setInitItems\n      });\n    }\n\n    return __jsx(ShopItemsByClassified, {\n      shopId: shopId,\n      products: productsByClassify,\n      clickClassify: clickClassify\n    });\n  };\n\n  return __jsx(React.Fragment, null, renderShops());\n};\n\nShopItems.propTypes = {\n  shopId: PropTypes.string.isRequired,\n  products: PropTypes.array.isRequired,\n  classifiedId: PropTypes.string,\n  productId: PropTypes.string\n};\nShopItems.defaultProps = {\n  classifiedId: null,\n  productId: null\n};\nexport default ShopItems;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/kjglass-proj/containers/shop/ShopItems.jsx"],"names":["React","useState","useEffect","useCallback","Router","PropTypes","ShopItemsLoading","ShopItemsComp","ShopItemDetailComp","ShopItemsByClassified","ShopItems","shopId","products","classifiedId","productId","productsByClassify","setProductsByClassify","selectedProducts","setSelectedProducts","sortedSelectedProducts","setSortedSelectedProducts","selectedProduct","setSelectedProduct","isSortByTitle","setIsSortByTitle","getSelectedProduct","candidates","id","Object","values","filter","product","clickClassify","classify","push","pathname","query","encodeURI","clickProduct","selectedProductArr","sortByTitle","newProducts","sort","a","b","title","getItemNumber","specification","number","split","findByText","findedText","lowerText","toLowerCase","indexOf","setInitItems","classifiedProducts","reduce","acc","cur","renderShops","length","type","image","content","tableItems","propTypes","string","isRequired","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport Router from 'next/router';\nimport PropTypes from 'prop-types';\n\nimport ShopItemsLoading from '../../components/shop/ShopItemsLoading';\nimport ShopItemsComp from '../../components/shop/ShopItmes';\nimport ShopItemDetailComp from '../../components/shop/ShopItemDetail';\nimport ShopItemsByClassified from '../../components/shop/ShopItemsByClassified';\n\nconst ShopItems = ({\n    shopId, products, classifiedId, productId,\n}) => {\n    const [productsByClassify, setProductsByClassify] = useState({});\n\n    const [selectedProducts, setSelectedProducts] = useState([]);\n    const [sortedSelectedProducts, setSortedSelectedProducts] = useState([]);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n\n    const [isSortByTitle, setIsSortByTitle] = useState(false);\n\n    const getSelectedProduct = useCallback((candidates, id) => Object.values(candidates).filter((product) => {\n        if (product) {\n            return product.id === id;\n        }\n    }), []);\n\n    const clickClassify = useCallback((classify) => {\n        setSelectedProducts([...productsByClassify[classify]]);\n        setSortedSelectedProducts([...productsByClassify[classify]]);\n\n        Router.push({\n            pathname: '/shop',\n            query: {\n                id: shopId,\n                classifiedId: encodeURI(classify),\n            },\n        });\n    }, [shopId, productsByClassify]);\n\n    const clickProduct = useCallback((id) => {\n        const selectedProductArr = getSelectedProduct(sortedSelectedProducts, id);\n        setSelectedProduct(selectedProductArr[0]);\n\n        Router.push({\n            pathname: '/shop',\n            query: {\n                id: shopId,\n                classifiedId: encodeURI(classifiedId),\n                productId: selectedProductArr[0].id,\n            },\n        });\n    }, [shopId, classifiedId, sortedSelectedProducts]);\n\n    const sortByTitle = () => {\n        const newProducts = [...sortedSelectedProducts];\n        newProducts.sort((a, b) => {\n            if (isSortByTitle) {\n                if (a.title < b.title) {\n                    return 1;\n                }\n                if (a.title > b.title) {\n                    return -1;\n                }\n            } else {\n                if (a.title < b.title) {\n                    return -1;\n                }\n                if (a.title > b.title) {\n                    return 1;\n                }\n            }\n\n            return 0;\n        });\n        setIsSortByTitle(!isSortByTitle);\n        setSortedSelectedProducts(newProducts);\n    };\n\n    const getItemNumber = (product) => {\n        if (product.specification) {\n            return `${product.specification[0].number.split('-')[0]}-${product.specification[0].number.split('-')[1]}`;\n        }\n        return '';\n    };\n\n    const findByText = (findedText) => {\n        const lowerText = findedText.toLowerCase();\n        const newProducts = products.filter((product) => {\n            if (product.title.toLowerCase().indexOf(lowerText) > -1) {\n                return true;\n            }\n            if (getItemNumber(product).toLowerCase().indexOf(lowerText) > -1) {\n                return true;\n            }\n            return false;\n        });\n        setSortedSelectedProducts(newProducts);\n    };\n\n    const setInitItems = () => {\n        setSortedSelectedProducts([...selectedProducts]);\n        setIsSortByTitle(false);\n    };\n\n    useEffect(() => {\n        const classifiedProducts = products.reduce((acc, cur) => {\n            if (cur) {\n                if (cur.classify) {\n                    if (acc[cur.classify]) {\n                        acc[cur.classify].push(cur);\n                    } else {\n                        acc[cur.classify] = [cur];\n                    }\n                }\n            }\n            return acc;\n        }, {});\n\n        if (productId) {\n            const selectedProductArr = getSelectedProduct(products, productId);\n            setSelectedProduct(selectedProductArr[0]);\n        }\n\n        if (classifiedId && classifiedProducts[classifiedId]) {\n            setSelectedProducts([...classifiedProducts[classifiedId]]);\n            setSortedSelectedProducts([...classifiedProducts[classifiedId]]);\n        }\n\n        setProductsByClassify(classifiedProducts);\n    }, [shopId, products]);\n\n    const renderShops = () => {\n        if (!products || products.length < 1) {\n            return (\n                <ShopItemsLoading />\n            );\n        }\n\n        if (classifiedId && productId && selectedProduct) {\n            return (\n                <ShopItemDetailComp\n                    type={selectedProduct.type}\n                    id={selectedProduct.id}\n                    image={selectedProduct.image}\n                    title={selectedProduct.title}\n                    content={selectedProduct.content}\n                    specification={selectedProduct.specification}\n                    tableItems={selectedProduct.tableItems || []}\n                    classifiedId={selectedProduct.classify}\n                />\n            );\n        }\n        if (classifiedId) {\n            return (\n                <ShopItemsComp\n                    products={sortedSelectedProducts}\n                    onClickProduct={clickProduct}\n                    sortByTitle={sortByTitle}\n                    isSortByTitle={isSortByTitle}\n                    findByText={findByText}\n                    setInitItems={setInitItems}\n                />\n            );\n        }\n        return (\n            <ShopItemsByClassified\n                shopId={shopId}\n                products={productsByClassify}\n                clickClassify={clickClassify}\n            />\n        );\n    };\n\n    return (\n        <>\n            {renderShops()}\n        </>\n    );\n};\n\nShopItems.propTypes = {\n    shopId: PropTypes.string.isRequired,\n    products: PropTypes.array.isRequired,\n    classifiedId: PropTypes.string,\n    productId: PropTypes.string,\n};\n\nShopItems.defaultProps = {\n    classifiedId: null,\n    productId: null,\n};\n\nexport default ShopItems;\n"]},"metadata":{},"sourceType":"module"}