{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport Product, { ITEM_WIDTH } from '../../containers/main/Product';\nimport { lightGrayColor } from '../../styles/style';\nimport { ArrowNext } from '../common/ArrowNext';\nimport { ArrowPrevious } from '../common/ArrowPrevious';\nvar Container = styled.div.withConfig({\n  displayName: \"ProductList__Container\",\n  componentId: \"v0uq4f-0\"\n})([\"display:flex;width:100%;background-color:\", \";overflow:hidden;flex-direction:row;position:relative;\"], lightGrayColor);\nvar Content = styled.div.withConfig({\n  displayName: \"ProductList__Content\",\n  componentId: \"v0uq4f-1\"\n})([\"white-space:nowrap;overflow:hidden;margin:10px 30px;height:310px;display:flex;align-items:center;\"]);\nvar ProductWrapper = styled.div.withConfig({\n  displayName: \"ProductList__ProductWrapper\",\n  componentId: \"v0uq4f-2\"\n})([\"margin:0 10px;transform:translateX(-\", \"px);transition:transform 0.5s ease;\"], function (props) {\n  return props.indent;\n});\nvar Arrow = styled.div.withConfig({\n  displayName: \"ProductList__Arrow\",\n  componentId: \"v0uq4f-3\"\n})([\"position:absolute;top:50%;transform:translateY(-50%);left:\", \";right:\", \";\"], function (props) {\n  return props.next ? undefined : 0;\n}, function (props) {\n  return props.next ? 0 : undefined;\n});\n\nvar ProductList = function ProductList(_ref) {\n  var products = _ref.products;\n  var contentRef = useRef();\n\n  var _useState = useState(0),\n      scrollIndex = _useState[0],\n      setScrollIndex = _useState[1];\n\n  var _useState2 = useState(0),\n      itemCount = _useState2[0],\n      setItemCount = _useState2[1];\n\n  var maxProductCount = useMemo(function () {\n    return products.length - 1;\n  }, [products.length]);\n  var maxScrollIndex = useMemo(function () {\n    return Math.floor(maxProductCount / itemCount);\n  }, [maxProductCount, itemCount]);\n  var isShowPrevious = useMemo(function () {\n    return scrollIndex > 0;\n  }, [scrollIndex]);\n  var isShowNext = useMemo(function () {\n    return scrollIndex < maxScrollIndex;\n  }, [scrollIndex, maxScrollIndex]);\n  var snapIndent = useMemo(function () {\n    return ITEM_WIDTH + 20;\n  }, []);\n  var clickPrevious = useCallback(function () {\n    setScrollIndex(function (prev) {\n      return prev - 1 < 0 ? 0 : prev - 1;\n    });\n  }, []);\n  var clickNext = useCallback(function () {\n    setScrollIndex(function (prev) {\n      return prev + 1 > maxScrollIndex ? maxScrollIndex : prev + 1;\n    });\n  }, [maxScrollIndex]);\n  var updateItemCount = useCallback(function () {\n    if (contentRef !== null && contentRef !== void 0 && contentRef.current) {\n      setItemCount(Math.floor(contentRef.current.offsetWidth / snapIndent));\n    }\n  }, [contentRef === null || contentRef === void 0 ? void 0 : contentRef.current, snapIndent]);\n  useEffect(function () {\n    window.addEventListener('resize', updateItemCount);\n    return function () {\n      window.removeEventListener('resize', updateItemCount);\n    };\n  }, []);\n  useEffect(function () {\n    updateItemCount();\n  }, []);\n  return __jsx(Container, null, isShowPrevious && __jsx(Arrow, {\n    next: false,\n    onClick: clickPrevious\n  }, __jsx(ArrowPrevious, null)), isShowNext && __jsx(Arrow, {\n    next: true,\n    onClick: clickNext\n  }, __jsx(ArrowNext, null)), __jsx(Content, {\n    ref: contentRef\n  }, products.map(function (product) {\n    return __jsx(ProductWrapper, {\n      key: product.id,\n      indent: snapIndent * itemCount * scrollIndex\n    }, __jsx(Product, {\n      product: product\n    }));\n  })));\n};\n\nexport default ProductList;","map":null,"metadata":{},"sourceType":"module"}