{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport Router from 'next/router';\nimport { toJS } from 'mobx';\nimport { observer } from 'mobx-react';\nimport useStore from '../../hooks/useStore';\nimport BasketsComp from '../../components/customercenter/Baskets';\n\nvar Baskets = function Baskets() {\n  var _useStore = useStore(),\n      bascketStore = _useStore.bascketStore,\n      itemsStore = _useStore.itemsStore;\n\n  var _toJS = toJS(itemsStore),\n      glasses = _toJS.glasses,\n      expendables = _toJS.expendables;\n\n  var _toJS2 = toJS(bascketStore),\n      glassItems = _toJS2.glassItems;\n\n  useEffect(function () {// Nothing. But to update component\n  }, [glasses, expendables]);\n\n  var convertItem = function convertItem(items, type) {\n    return items.map(function (item) {\n      var itemInfo = itemsStore.getItemInfo({\n        type: type,\n        itemId: item.itemId,\n        specificationId: item.specificationItemId\n      });\n\n      if (!itemInfo) {\n        return null;\n      }\n\n      return _objectSpread(_objectSpread({}, itemInfo), {}, {\n        index: \"\".concat(item.itemId).concat(item.specificationItemId),\n        count: item.count\n      });\n    }).filter(function (item) {\n      return !!item;\n    });\n  };\n\n  var openItem = function openItem(type, itemInfo) {\n    Router.push({\n      pathname: '/shop',\n      query: {\n        id: \"\".concat(type),\n        classifiedId: encodeURI(\"\".concat(itemInfo.selectedItem.classify)),\n        productId: \"\".concat(itemInfo.selectedItem.id)\n      }\n    });\n  };\n\n  var onClickRemove = function onClickRemove(selectedItem, selectedSpecificItem) {\n    bascketStore.removeBasket({\n      type: selectedItem.type,\n      itemId: selectedItem.id,\n      specificationItemId: selectedSpecificItem.id\n    });\n  };\n\n  return toJS(bascketStore) && __jsx(BasketsComp, {\n    glassItems: convertItem(glassItems.glass, 'glasses'),\n    glassStore: glasses,\n    expendableItems: convertItem(glassItems.expendables, 'expendables'),\n    expendableStore: expendables,\n    onClickRemove: onClickRemove,\n    openItem: openItem\n  });\n};\n\nexport default observer(Baskets);","map":null,"metadata":{},"sourceType":"module"}