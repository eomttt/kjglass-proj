{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint-disable no-alert */\nimport React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport useStore from '../../hooks/useStore';\nimport ShopItemDetailInfoComp from '../../components/shop/ShopItemDetailInfo';\nconst ShopItemDetailInfo = observer(({\n  itemType,\n  itemId,\n  specificationItem,\n  classifiedId\n}) => {\n  const {\n    bascketStore\n  } = useStore();\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n\n  const onChangeInputCount = e => {\n    setCount(e.target.value);\n  };\n\n  const onClickAddBascket = () => {\n    if (count < 1) {\n      alert(' 1개 이상으로 선택해주세요');\n      return;\n    }\n\n    bascketStore.addBasket({\n      type: itemType,\n      itemId,\n      specificationItemId: specificationItem.id,\n      count,\n      classifiedId\n    });\n    alert('장바구니에 저장되었습니다. 장바구니를 통해 확인해주세요. 고객센터 -> 장바구니 에서 확인하실 수 있습니다.');\n  };\n\n  return __jsx(ShopItemDetailInfoComp, {\n    onChangeInputCount: onChangeInputCount,\n    onClickAddBascket: onClickAddBascket,\n    content: specificationItem.content,\n    number: specificationItem.number\n  });\n});\nShopItemDetailInfo.propTypes = {\n  itemType: PropTypes.string.isRequired,\n  itemId: PropTypes.string.isRequired,\n  specificationItem: PropTypes.object.isRequired,\n  classifiedId: PropTypes.string.isRequired\n};\nexport default ShopItemDetailInfo;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/kjglass-proj/containers/shop/ShopItemDetailInfo.jsx"],"names":["React","useState","observer","PropTypes","useStore","ShopItemDetailInfoComp","ShopItemDetailInfo","itemType","itemId","specificationItem","classifiedId","bascketStore","count","setCount","onChangeInputCount","e","target","value","onClickAddBascket","alert","addBasket","type","specificationItemId","id","content","number","propTypes","string","isRequired","object"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAOC,sBAAP,MAAmC,0CAAnC;AAEA,MAAMC,kBAAkB,GAAGJ,QAAQ,CAAC,CAAC;AAAEK,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA,iBAApB;AAAuCC,EAAAA;AAAvC,CAAD,KAA2D;AAC3F,QAAM;AAAEC,IAAAA;AAAF,MAAmBP,QAAQ,EAAjC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMa,kBAAkB,GAAIC,CAAD,IAAO;AAC9BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAIN,KAAK,GAAG,CAAZ,EAAe;AACXO,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACA;AACH;;AACDR,IAAAA,YAAY,CAACS,SAAb,CAAuB;AACnBC,MAAAA,IAAI,EAAEd,QADa;AAEnBC,MAAAA,MAFmB;AAGnBc,MAAAA,mBAAmB,EAAEb,iBAAiB,CAACc,EAHpB;AAInBX,MAAAA,KAJmB;AAKnBF,MAAAA;AALmB,KAAvB;AAOAS,IAAAA,KAAK,CAAC,8DAAD,CAAL;AACH,GAbD;;AAeA,SACI,MAAC,sBAAD;AACI,IAAA,kBAAkB,EAAEL,kBADxB;AAEI,IAAA,iBAAiB,EAAEI,iBAFvB;AAGI,IAAA,OAAO,EAAET,iBAAiB,CAACe,OAH/B;AAII,IAAA,MAAM,EAAEf,iBAAiB,CAACgB;AAJ9B,IADJ;AAQH,CA/BkC,CAAnC;AAiCAnB,kBAAkB,CAACoB,SAAnB,GAA+B;AAC3BnB,EAAAA,QAAQ,EAAEJ,SAAS,CAACwB,MAAV,CAAiBC,UADA;AAE3BpB,EAAAA,MAAM,EAAEL,SAAS,CAACwB,MAAV,CAAiBC,UAFE;AAG3BnB,EAAAA,iBAAiB,EAAEN,SAAS,CAAC0B,MAAV,CAAiBD,UAHT;AAI3BlB,EAAAA,YAAY,EAAEP,SAAS,CAACwB,MAAV,CAAiBC;AAJJ,CAA/B;AAOA,eAAetB,kBAAf","sourcesContent":["/* eslint-disable no-alert */\nimport React, { useState } from 'react';\nimport { observer } from 'mobx-react';\n\nimport PropTypes from 'prop-types';\nimport useStore from '../../hooks/useStore';\n\nimport ShopItemDetailInfoComp from '../../components/shop/ShopItemDetailInfo';\n\nconst ShopItemDetailInfo = observer(({ itemType, itemId, specificationItem, classifiedId }) => {\n    const { bascketStore } = useStore();\n    const [count, setCount] = useState(0);\n\n    const onChangeInputCount = (e) => {\n        setCount(e.target.value);\n    };\n\n    const onClickAddBascket = () => {\n        if (count < 1) {\n            alert(' 1개 이상으로 선택해주세요');\n            return;\n        }\n        bascketStore.addBasket({\n            type: itemType,\n            itemId,\n            specificationItemId: specificationItem.id,\n            count,\n            classifiedId,\n        });\n        alert('장바구니에 저장되었습니다. 장바구니를 통해 확인해주세요. 고객센터 -> 장바구니 에서 확인하실 수 있습니다.');\n    };\n\n    return (\n        <ShopItemDetailInfoComp\n            onChangeInputCount={onChangeInputCount}\n            onClickAddBascket={onClickAddBascket}\n            content={specificationItem.content}\n            number={specificationItem.number}\n        />\n    );\n});\n\nShopItemDetailInfo.propTypes = {\n    itemType: PropTypes.string.isRequired,\n    itemId: PropTypes.string.isRequired,\n    specificationItem: PropTypes.object.isRequired,\n    classifiedId: PropTypes.string.isRequired,\n};\n\nexport default ShopItemDetailInfo;\n"]},"metadata":{},"sourceType":"module"}